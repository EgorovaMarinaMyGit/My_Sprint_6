{"name": "test_check_open_dzen_page_after_click_on_logo[locator0-order_list0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:552:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16", "trace": "self = <test_order_page.TestOrderPage object at 0x00000241B619D0F0>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"c17efd53-b488-4220-91cc-fde7b946b995\")>\nmain_page = <pages.main_page.MainPage object at 0x00000241B6238A50>\nlocator = ('xpath', \"//button[@class='Button_Button__ra12g' and contains(text(), 'Заказать')]\")\norder_list = {'адрес': 'Проспект 40', 'имя': 'Петя', 'комментарий для курьера': 'надо срочно', 'телефон': '89217894512', ...}\n\n    @pytest.mark.parametrize(\n        'locator, order_list',\n        [\n           (MainPageLocators.ORDER_BUTTON_HEADER, first_order_list),\n           (MainPageLocators.ORDER_BUTTON_FOOTER, second_order_list)\n        ]\n    )\n    \n    @allure.description(\"Тест проверяет, что если нажать на логотип Яндекса, \" \\\n    \"в новом окне через редирект откроется главная страница Дзена.\")\n    def test_check_open_dzen_page_after_click_on_logo(self, driver, main_page, locator, order_list):\n        main_page.go_to_url(url_main_page)\n        main_page.click_to_element(MainPageLocators.COOKIE_LOCATOR)\n        main_page.click_to_element(locator)\n        page_order = OrderPage(driver)\n        page_order.set_fields_to_order(order_list)\n        page_order.click_to_element(OrderPageLocators.VIEW_STATUS_TITLE)\n        page_order.find_element_with_wait(OrderPageLocators.LOGO_YANDEX)\n        page_order.swith_to_another_window(driver)\n    \n>       assert page_order.find_element_with_wait(OrderPageLocators.YES_ON_MODAL_WINDOW_DZEN).is_displayed()\n\ntests\\test_order_page.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\base_page.py:16: in find_element_with_wait\n    self.wait.until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c17efd53-b488-4220-91cc-fde7b946b995\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x00000241B661A7A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:552:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "description": "Тест проверяет, что если нажать на логотип Яндекса, в новом окне через редирект откроется главная страница Дзена.", "steps": [{"name": "Создание заказа", "status": "passed", "parameters": [{"name": "order_list", "value": "{'имя': 'Петя', 'фамилия': 'Петькин', 'адрес': 'Проспект 40', 'телефон': '89217894512', 'комментарий для курьера': 'надо срочно'}"}], "start": 1749136949961, "stop": 1749136954066}], "parameters": [{"name": "locator", "value": "('xpath', \"//button[@class='Button_Button__ra12g' and contains(text(), 'Заказать')]\")"}, {"name": "order_list", "value": "{'имя': 'Петя', 'фамилия': 'Петькин', 'адрес': 'Проспект 40', 'телефон': '89217894512', 'комментарий для курьера': 'надо срочно'}"}], "start": 1749136945101, "stop": 1749136959996, "uuid": "94be08a1-79b8-485d-9d98-4cbe9d7dbca9", "historyId": "6fec5e2cb454954cfbd781d971e018c5", "testCaseId": "ec51bc9ff570b69a801791ab2cb4ef2b", "fullName": "tests.test_order_page.TestOrderPage#test_check_open_dzen_page_after_click_on_logo", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_page"}, {"name": "subSuite", "value": "TestOrderPage"}, {"name": "host", "value": "DESKTOP-04L8HEE"}, {"name": "thread", "value": "10844-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_page"}]}